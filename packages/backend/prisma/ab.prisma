// When resolving an experiment in client side,
// it should be like "flag.experimentKey = "variationKey"
model Experiment {
    uuid                  String                  @id @default(uuid())
    name                  String
    key                   String
    description           String
    createdAt             DateTime                @default(now())
    ExperimentEnvironment ExperimentEnvironment[]
    varations             Variation[]
}

model Variation {
    uuid           String   @id @default(uuid())
    key            String
    name           String
    description    String
    createdAt      DateTime @default(now())
    experimentUuid String?

    Experiment   Experiment?    @relation(fields: [experimentUuid], references: [uuid])
    VariationHit VariationHit[]
}

model VariationHit {
    id            Int       @id @default(autoincrement())
    date          DateTime  @default(now())
    variation     Variation @relation(fields: [variationUuid], references: [uuid])
    variationUuid String
}

model ExperimentEnvironment {
    experiment    Experiment  @relation(fields: [experimentId], references: [uuid])
    experimentId  String
    environment   Environment @relation(fields: [environmentId], references: [uuid])
    environmentId String
    // the values set in ab/experiment.status.ts
    status        String      @default("NOT_ACTIVATED")

    @@id([experimentId, environmentId])
}

// Alias model, don't touch this one.
// If you need to modify the EnvironmentModel, go into the base.prisma file
model Environment {
    uuid                  String                  @id @default(uuid())
    ExperimentEnvironment ExperimentEnvironment[]
}
