name: Dashboard
on:
  pull_request:
    branches: ["master"]
  workflow_dispatch:

env:
  SLEEP_DELAY: 0

jobs:
  e2e-light:
    env:
      ALLOW_REGISTRATION: true
      START_MOCK_SERVER: true
      BACKEND_URL: http://localhost:4000
      PROGRESSIVELY_ENV: valid-sdk-key
      SEED_ROUND_EVENT_HITS: 1
      CLICKHOUSE_HOST: http://localhost:8123
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD:

    runs-on: ubuntu-latest
    # Uncomment for parallel
    # strategy:
    #   matrix:
    #     job: [0, 1, 2, 3]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: progressively
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/clickhouse
      - uses: ./.github/actions/monorepo-setup

      - name: Dependencies install
        run: pnpm install --filter=@progressively/backend... --filter=@progressively/frontend...

      - name: Db prepare
        run: rm -rf ./packages/database/prisma/migrations && pnpm run db:prepare

      - name: Build the project
        run: pnpm run build --filter=@progressively/backend --filter=@progressively/frontend

      - name: Start backend
        run: pnpm run start:backend &

      - name: Install cypress
        working-directory: ./websites/frontend
        shell: bash
        run: npx cypress install

      - name: Start the frontend project
        working-directory: ./websites/frontend
        shell: bash
        run: pnpm start &

      # Uncomment for parallel
      - name: E2E tests
        run: npx wait-on -t 60000 tcp:4000 && pnpm run test:e2e:ci
        working-directory: ./websites/frontend
        #   CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cypress-artifacts
          path: ./websites/frontend/cypress/videos
