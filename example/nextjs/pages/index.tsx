import type { NextPage } from "next";
import Head from "next/head";
import React from "react";
import styles from "../styles/Home.module.css";
import { ProgressivelyProvider, useFlags } from "@progressively/react";
import { Progressively } from "@progressively/server-side";

const FlaggedComponent = () => {
  const { flags, setFields } = useFlags();

  const handleClick = () => {
    setFields({ id: 2 });
  };

  return (
    <div>
      {flags.newHomepage ? "New variant" : "Old variant"}
      <footer>{flags.newFooter ? "New footer" : "Old footer"}</footer>
      <button onClick={handleClick}>Remove from audience</button>
    </div>
  );
};

const Home: NextPage = ({ progressivelyProps }: any) => {
  return (
    <ProgressivelyProvider {...progressivelyProps}>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <h1>Nextjs</h1>

        <FlaggedComponent />
      </div>
    </ProgressivelyProvider>
  );
};

export async function getServerSideProps({
  req,
  res,
}: {
  req: Request;
  res: any;
}) {
  const sdk = Progressively.init({
    secretKey: "fc8dfc3d-9313-45a4-9866-63946d4e7124",
    clientKey: "26af3e67-c8d1-4c28-a551-d2e962c3525b",
    websocketUrl: "wss://progressively-backend.onrender.com",
    apiUrl: "https://progressively-backend.onrender.com",
    fields: {
      email: "marvin.frachet@something.com",
      id: "1",
    },
  });

  const { data, response } = await sdk.loadFlags();

  const progressivelyCookie = response?.headers?.get("set-cookie") || "";
  res.setHeader("set-cookie", progressivelyCookie);

  return {
    props: {
      progressivelyProps: data,
    },
  };
}

export default Home;
