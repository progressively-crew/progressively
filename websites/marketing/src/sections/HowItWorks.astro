---
import Card from "../components/Card/Card.astro";
import Feature from "../components/Feature.astro";
import Title from "../components/Title.astro";
import Text from "../components/Text.astro";
import welcomeSrc from "./assets/howitworks/welcome.png";
import reactSrc from "./assets/howitworks/react.png";
import audienceSrc from "./assets/howitworks/audience.png";
import aboveFoldSrc from "./assets/above-fold/analytics.png";
import mfrachetSrc from "./assets/howitworks/mfrachet.png";
import Button from "../components/Button.astro";

const howItWorks = [
  {
    title: "1. You setup your instance",
    imageSrc: welcomeSrc,
    content: [
      "At the outset, as Progressively is self-hosted, the initial step is setting up the tool.",
      "By following the get-started guide, you'll set up the dashboard, APIs, and database.",
      "Once done, you can create your admin user.",
    ],
    ctaTitle: "Deploy an instance",
    ctaLink: "https://docs.progressively.app/guides/deployments/",
  },

  {
    title: "2. Configure your first feature flag",
    imageSrc: audienceSrc,
    content: [
      "After getting your instance up and running, dive in to create a project, set up environments, and craft your inaugural feature flag.",
      "Take a moment to tailor how your feature flag behaves, experiment with scheduling updates, and explore the dashboard.",
    ],
  },
  {
    title: "3. Choose a SDK",
    imageSrc: reactSrc,
    content: [
      "Now, let's configure your codebase.",
      "Select an available SDK, install it, configure it, and deploy your project.",
      "Once a feature flag is assessed, track it through the insights panel.",
    ],
    ctaTitle: "Check the React SDK",
    ctaLink: "https://docs.progressively.app/sdks/sdk-react/",
  },
  {
    title: "5. Your users will access your website",
    imageSrc: mfrachetSrc,
    content: [
      "As your users land on your webpage, the feature flag evaluation kicks off.",
      "This process checks user fields (provided by you), computes them against the feature flag rules, and ultimately determines a value.",
      "Based on this value, the UI adapts to display the intended variant.",
    ],
  },
  {
    title: "5. Enjoy your insights",
    imageSrc: aboveFoldSrc,
    content: [
      "With that completed, you're all set and geared up to create incredible features and comprehend your audience's behavior.",
    ],
  },
];
---

<section class="bg-slate-100 px-4">
  <div class="max-w-6xl w-full mx-auto py-12">
    <div class="text-center pb-8 md:pb-12">
      <Title tag="h2" size="L">How it works?</Title>
    </div>

    <Card>
      <ul class="px-6 flex flex-col">
        {
          howItWorks.map((feat, i) => (
            <li>
              <Feature
                title={feat.title}
                imageSrc={feat.imageSrc}
                reversed={i % 2 !== 0}
                noSizeConstraints
              >
                <div>
                  <div class="flex flex-col gap-4">
                    {feat.content.map((c) => (
                      <Text size="L">{c}</Text>
                    ))}
                  </div>
                  {feat.ctaLink && (
                    <div class="pt-8">
                      <Button
                        size="M"
                        href={feat.ctaLink}
                        variant="secondary"
                        target="_blank"
                        id={feat.ctaTitle}
                      >
                        {feat.ctaTitle}
                      </Button>
                    </div>
                  )}
                </div>
              </Feature>
            </li>
          ))
        }
      </ul>
    </Card>
  </div>
</section>
