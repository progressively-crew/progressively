---
export interface Props {
  variant?:
    | "primary"
    | "secondary"
    | "tertiary"
    | "gradient"
    | "secondary-inverse"
    | "tertiary-inverse";
  size?: "L" | "M" | "S";
  href?: string;
  id?: string;
  target?: "_blank";
}

const { variant, size, href, id, target } = Astro.props;

const sizeStyles = {
  L: "py-3 px-9 text-xl border-2",
  S: "py-1 px-4 text-sm border",
  M: "py-2 px-6 text-base border",
};

const variantStyles = {
  gradient:
    "bg-gray-900 border-2 border-pink-500 text-white hover:bg-gray-800 active:bg-gray-700",
  primary:
    "bg-gray-900 hover:bg-gray-800 active:bg-gray-700 text-white border-transparent",
  secondary:
    "border-gray-900 text-gray-900 hover:border-gray-800 hover:text-gray-800 active:border-gray-700 active:text-gray-700 hover:opacity-70 active:opacity-50",
  tertiary:
    "text-gray-900 hover:text-gray-800 active:text-gray-700 border-transparent hover:bg-gray-50 active:bg-gray-100",
  "tertiary-inverse":
    "border-none text-white hover:text-gray-50 active:text-gray-100",
  "secondary-inverse":
    "border-white text-white hover:border-gray-50 hover:text-gray-50 active:border-gray-100 active:text-gray-100 hover:opacity-70 active:opacity-50",
};

const sharedStyles = "text-center rounded-full";
const styles = `${sharedStyles} ${variantStyles[variant || "primary"]} ${
  sizeStyles[size || "L"]
}`;

const El = href ? "a" : "button";
---

<El class={styles} href={href} id={id} target={target}><slot /></El>
