---
interface Props {
  title: string;
  description: string;
  keywords: string;
}

const { title, description, keywords } = Astro.props;
const currentUrl = Astro.url.toString();

const scriptSrc = "/progressively.min.js";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="viewport" content="width=device-width" />

    <meta property="og:title" content={title} />
    <meta property="og:url" content={currentUrl} />
    <meta property="og:image" content="/meta-img.png" />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={description} />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@_progressively" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="/favicon.svg" />

    <link rel="image_src" href="/meta-img.png" />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={currentUrl} />

    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --primary: #4f46e5;
    --color-slide-thumb: #fff;
    --color-slide-thumb-border: #334155;
    --bg-slide: #efefef;
  }

  html {
    font-family: system-ui, sans-serif;
  }
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }

  /********** Range Input Styles **********/
  /*Range Reset*/
  input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    cursor: pointer;
    width: 100%;
  }

  /* Removes default focus */
  input[type="range"]:focus {
    outline: none;
  }

  /***** Chrome, Safari, Opera and Edge Chromium styles *****/

  /* slider thumb */
  input[type="range"]::-webkit-slider-thumb {
    content: "''";
    -webkit-appearance: none; /* Override default look */
    appearance: none;

    /*custom styles*/
    background-color: var(--color-slide-thumb);
    height: 1.6rem;
    width: 1.6rem;
    border: 2px solid var(--color-slide-thumb-border);
    border-radius: 24px;
  }

  input[type="range"]:focus::-webkit-slider-thumb {
    outline: 3px solid var(--bg-slide);
    outline-offset: 0.125rem;
  }

  /******** Firefox styles ********/

  /* slider thumb */
  input[type="range"]::-moz-range-thumb {
    border: none; /*Removes extra border that FF applies*/
    border-radius: 0; /*Removes default border-radius that FF applies*/

    /*custom styles*/
    background-color: var(--color-slide-thumb);
    height: 1.6rem;
    width: 1.6rem;
    border: 2px solid var(--color-slide-thumb-border);
    border-radius: 24px;
  }

  input[type="range"]:focus::-moz-range-thumb {
    outline: 3px solid var(--bg-slide);
    outline-offset: 0.125rem;
  }

  .hero-bg {
    background-color: hsla(0, 100%, 50%, 1);
    background-image: radial-gradient(
        at 40% 20%,
        hsla(28, 100%, 74%, 1) 0px,
        transparent 50%
      ),
      radial-gradient(at 80% 0%, hsla(189, 100%, 56%, 1) 0px, transparent 50%),
      radial-gradient(at 0% 50%, hsla(355, 100%, 93%, 1) 0px, transparent 50%),
      radial-gradient(at 80% 50%, hsla(340, 100%, 76%, 1) 0px, transparent 50%),
      radial-gradient(at 0% 100%, hsla(22, 100%, 77%, 1) 0px, transparent 50%),
      radial-gradient(at 80% 100%, hsla(242, 100%, 70%, 1) 0px, transparent 50%),
      radial-gradient(at 0% 0%, hsla(343, 100%, 76%, 1) 0px, transparent 50%);
  }
</style>

<script
  is:inline
  src="/progressively.min.js"
  data-progressively-endpoint={import.meta.env.PUBLIC_PROGRESSIVELY_ENDPOINT}
  data-progressively-client-key={import.meta.env.PUBLIC_PROGRESSIVELY_CLIENT}
  data-progressively-qualitative-tracking="true"
></script>

<script>
  const clientKey = import.meta.env.PUBLIC_PROGRESSIVELY_CLIENT;

  import { Progressively } from "@progressively/sdk-js";

  const sdk = Progressively.init(clientKey, {
    apiUrl: "https://api.progressively.app",
    websocketUrl: "wss://api.progressively.app",
  });

  ["nav-docs", "above-the-fold-cta", "schedule-call", "go-to-app"].forEach(
    (id) => {
      const el = document.getElementById(id);

      if (el) {
        el.addEventListener("click", (e) => {
          (window as any)?.track(id);
        });
      }
    }
  );

  const banner = document.getElementById("banner");

  const handleUpdate = (thanksPhBanner: string | boolean) => {
    if (thanksPhBanner) {
      if (thanksPhBanner === "A") {
        banner?.classList.add("bg-emerald-100");
        banner?.classList.remove("bg-orange-100");
      } else {
        banner?.classList.add("bg-orange-100");
        banner?.classList.remove("bg-emerald-100");
      }

      banner?.classList.remove("hidden");
    } else {
      banner?.classList.add("hidden");
    }
  };

  const { flags } = await sdk.loadFlags();
  handleUpdate(flags.thanksPhBanner);

  if (flags.thanksPhBanner) {
    const btn = document.getElementById("ph-button");
    btn?.addEventListener("click", () => {
      (window as any)?.track("ph-button");
    });
  }

  sdk.onFlagUpdate((nextFlags) => {
    handleUpdate(nextFlags.thanksPhBanner);
  });
</script>
