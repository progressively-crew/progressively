---
import Feature from "../components/Feature.astro";
import Title from "../components/Title.astro";
import Text from "../components/Text.astro";
import toggleSrc from "./assets/value/toggle.jpg";
import gradualSrc from "./assets/value/gradual.jpg";
import qaSrc from "./assets/value/qa.jpg";
import clockSrc from "./assets/value/clock.jpg";

const features = [
  {
    title: "A better workflow allowing for more frequent deployments",
    content: [
      "By simply pulling a trigger, Progressively will bring your hidden features live to your users.",
      "Your new feature has introduced bugs? Deactivate the feature by pull the trigger the other way.",
    ],
    imageSrc: toggleSrc,
  },
  {
    title: "Gradual deployments",
    content: [
      "You don't feel super-safe about releasing your new feature? Start by only rolling it out to 1% or 2% of your audience.",
      "If your error tracking system yells at you, deactivate your feature and continue gradually your release.",
    ],
    imageSrc: gradualSrc,
  },
  {
    title: "Scheduled deployments",
    content: [
      "Preparing a product or a feature launch is a huge task and it's generally time sensitive",
      "If you don't want to think of yet another thing to achieve before the release, schedule the release deployments. One tick less on your list.",
    ],
    imageSrc: clockSrc,
  },
  {
    title: "QA directly in production",
    content: [
      "You don't need intermediate staging environments that don't work like your production one.",
      "Instead, hide your features behind a feature flag, and target your users by qualitative criteria. For instance, every user with email address ending by X is able to see the feature.",
      "And don't worry, we don't store your users data :).",
    ],
    imageSrc: qaSrc,
  },
  {
    title: "Privacy aware analytics",
    content: [
      "Having insightful data is important to scale a product or a business. Making decision should be driven by meaningful data.",
      "Feature flags, A/B testing and analytics are notions that are very bounded. Naturally, you can count on responsible analytics built-in Progressively.",
    ],
    imageSrc: qaSrc,
  },
];
---

<section class="max-w-6xl w-full mx-auto py-12">
  <div class="text-center">
    <Title as="h2" size="L">What can you expect from it?</Title>
  </div>

  <ul class="pt-20 flex flex-col gap-12">
    {
      features.map((feat, i) => (
        <li>
          <Feature
            title={feat.title}
            imageSrc={feat.imageSrc}
            reversed={i % 2 !== 0}
          >
            <div class="flex flex-col gap-4">
              {feat.content.map((c) => (
                <Text size="L">{c}</Text>
              ))}
            </div>
          </Feature>
        </li>
      ))
    }
  </ul>
</section>
