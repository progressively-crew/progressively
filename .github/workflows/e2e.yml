name: E2E
on:
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  static:
    env:
      ALLOW_REGISTRATION: true
      START_MOCK_SERVER: true
    runs-on: ubuntu-latest
    # Uncomment for parallel
    # strategy:
    #   matrix:
    #     job: [0, 1, 2, 3]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: progressively
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Creating .env files
        run: mv ./packages/frontend/.env.example ./packages/frontend/.env && mv ./packages/backend/.env.example ./packages/backend/.env

      - name: Prepare the DB
        run: pnpm run db:prepare

      - name: Build
        run: pnpm run build

      - name: Start the backend project
        working-directory: ./packages/backend
        run: pnpm start &

      - name: Start the frontend project
        working-directory: ./packages/frontend
        run: pnpm start &
      # Uncomment for parallel
      - name: E2E tests
        run: npx wait-on -t 60000 tcp:4000 && pnpm run test:e2e:ci
        # env:
        #   CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
